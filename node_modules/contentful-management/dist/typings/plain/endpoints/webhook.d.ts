import type { AxiosInstance } from 'contentful-sdk-core';
import { QueryParams, GetSpaceParams, CollectionProp } from './common-types';
import { WebhookProps, CreateWebhooksProps, WebhookHealthProps, WebhookCallDetailsProps } from '../../entities/webhook';
declare type GetWebhookParams = GetSpaceParams & {
    webhookDefinitionId: string;
};
declare type GetWebhookCallDetailsUrl = GetWebhookParams & {
    callId: string;
};
export declare const get: (http: AxiosInstance, params: GetWebhookParams) => Promise<WebhookProps>;
export declare const getManyCallDetails: (http: AxiosInstance, params: GetWebhookParams & QueryParams) => Promise<CollectionProp<Pick<WebhookCallDetailsProps, "sys" | "url" | "statusCode" | "errors" | "eventType" | "requestAt" | "responseAt">>>;
export declare const getCallDetails: (http: AxiosInstance, params: GetWebhookCallDetailsUrl) => Promise<WebhookCallDetailsProps>;
export declare const getHealthStatus: (http: AxiosInstance, params: GetWebhookParams) => Promise<WebhookHealthProps>;
export declare const getMany: (http: AxiosInstance, params: GetSpaceParams & QueryParams) => Promise<CollectionProp<WebhookProps>>;
export declare const create: (http: AxiosInstance, params: GetSpaceParams, rawData: CreateWebhooksProps, headers?: Record<string, unknown> | undefined) => Promise<WebhookProps>;
export declare const createWithId: (http: AxiosInstance, params: GetWebhookParams, rawData: CreateWebhooksProps, headers?: Record<string, unknown> | undefined) => Promise<WebhookProps>;
export declare const update: (http: AxiosInstance, params: GetWebhookParams, rawData: WebhookProps, headers?: Record<string, unknown> | undefined) => Promise<WebhookProps>;
export declare const del: (http: AxiosInstance, params: GetWebhookParams) => Promise<any>;
export {};
