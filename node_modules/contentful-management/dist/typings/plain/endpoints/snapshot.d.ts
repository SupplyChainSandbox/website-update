import type { AxiosInstance } from 'contentful-sdk-core';
import { CollectionProp, GetSpaceEnvironmentParams, QueryParams } from './common-types';
import { EntryProps } from '../../entities/entry';
import { SnapshotProps } from '../../entities/snapshot';
import { ContentTypeProps } from '../../entities/content-type';
declare type GetSnapshotForEntryParams = GetSpaceEnvironmentParams & {
    entryId: string;
};
export declare const getManyForEntry: <T extends Record<string, any> = Record<string, any>>(http: AxiosInstance, params: GetSnapshotForEntryParams & QueryParams) => Promise<CollectionProp<SnapshotProps<EntryProps<T>>>>;
export declare const getForEntry: <T extends Record<string, any> = Record<string, any>>(http: AxiosInstance, params: GetSnapshotForEntryParams & {
    snapshotId: string;
}) => Promise<SnapshotProps<EntryProps<T>>>;
declare type GetSnapshotForContentTypeParams = GetSpaceEnvironmentParams & {
    contentTypeId: string;
};
export declare const getManyForContentType: (http: AxiosInstance, params: GetSnapshotForContentTypeParams & QueryParams) => Promise<CollectionProp<SnapshotProps<ContentTypeProps>>>;
export declare const getForContentType: (http: AxiosInstance, params: GetSnapshotForContentTypeParams & {
    snapshotId: string;
}) => Promise<SnapshotProps<ContentTypeProps>>;
export {};
