import type { AxiosInstance } from 'contentful-sdk-core';
import { DefaultElements, ISO8601Timestamp, BasicCursorPaginationOptions, MetaLinkProps, Link } from '../common-types';
/**
 * Represents that state of the scheduled action
 */
declare enum ScheduledActionStatus {
    /** action is pending execution */
    scheduled = "scheduled",
    /** action has been started and pending completion */
    inProgress = "inProgress",
    /** action was completed successfully (terminal state) */
    succeeded = "succeeded",
    /** action failed to complete (terminal state) */
    failed = "failed",
    /** action was canceled by a user (terminal state) */
    canceled = "canceled"
}
declare type SchedulableEntityType = 'Entry' | 'Asset' | 'Release';
declare type SchedulableActionType = 'publish' | 'unpublish';
export declare type ScheduledActionSysProps = {
    id: string;
    type: 'ScheduledAction';
    space: {
        sys: MetaLinkProps;
    };
    status: ScheduledActionStatus;
    createdAt: ISO8601Timestamp;
    createdBy: {
        sys: MetaLinkProps;
    };
    /** an ISO8601 date string representing when an action was moved to canceled */
    canceledAt?: ISO8601Timestamp;
    canceledBy?: {
        sys: MetaLinkProps;
    };
};
export declare type ScheduledActionProps = {
    sys: ScheduledActionSysProps;
    action: SchedulableActionType;
    entity: Link<SchedulableEntityType>;
    environment?: {
        sys: MetaLinkProps;
    };
    scheduledFor: {
        datetime: ISO8601Timestamp;
    };
};
export interface ScheduledActionCollection {
    sys: {
        type: 'Array';
    };
    pages: BasicCursorPaginationOptions;
    limit: number;
    items: ScheduledActionProps[];
}
export interface ScheduledActionQueryOptions extends BasicCursorPaginationOptions {
    'environment.sys.id': string;
    [key: string]: any;
}
declare type ScheduledActionApi = {
    delete(): Promise<ScheduledAction>;
};
export interface ScheduledAction extends ScheduledActionProps, DefaultElements<ScheduledActionProps>, ScheduledActionApi {
}
export declare function createDeleteScheduledAction(http: AxiosInstance): () => Promise<ScheduledAction>;
export default function createScheduledActionApi(http: AxiosInstance): ScheduledActionApi;
export declare function wrapScheduledAction(http: AxiosInstance, data: ScheduledActionProps): ScheduledAction;
export declare const wrapScheduledActionCollection: (http: AxiosInstance, data: import("../common-types").CollectionProp<ScheduledActionProps>) => import("../common-types").Collection<ScheduledAction, ScheduledActionProps>;
export {};
